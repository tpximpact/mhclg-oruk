{
	"openapi": "3.0.1",
	"info": {
		"title": "Human services API",
		"description": "An API to read open data compliant with Open Referral as extended for English local government and health data. Loaded with Bristol sample (historic) service data.\n\nWeb methods support JSON format outputs by default. Hence https://api.porism.com/ServiceDirectoryService/services returns the same as https://api.porism.com/ServiceDirectoryService/services.json\n\nImplementations supporting CSV append \".csv\" to the web method, eg https://api.porism.com/ServiceDirectoryService/services.csv\n\n<a href=\"https://developers.openreferraluk.org/Guidance/\" target=\"_blank\">Guidance on the data structure and each field</a>\n<a href=\"https://developers.openreferraluk.org/API-Guidance/\" target=\"_blank\">Guidance on using the API</a>\n<a href=\"https://openreferraluk.org/contact-us/\" target=\"_blank\">Contacts and to raise issues</a>\n<a href=\"http://www.nationalarchives.gov.uk/doc/open-government-licence\" target=\"_blank\">License of API</a>",
		"version": "1.0.0"
	},
	"paths": {
		"/services/{id}": {
			"get": {
				"tags": ["Services"],
				"summary": "Get a single service",
				"operationId": "getService",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": { "type": "string" }
					}
				],
				"responses": {
					"500": {
						"description": "Internal Server Error",
						"content": { "*/*": { "schema": { "type": "object" } } }
					},
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/service_details"
								}
							}
						}
					}
				}
			}
		},
		"/taxonomies/{id}": {
			"get": {
				"tags": ["Taxonomies"],
				"summary": "Get a single taxonomy",
				"operationId": "getTaxonomy",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": { "type": "string" }
					}
				],
				"responses": {
					"500": {
						"description": "Internal Server Error",
						"content": { "*/*": { "schema": { "type": "object" } } }
					},
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/taxonomy" }
							}
						}
					}
				}
			}
		},
		"/reviews/{id}": {
			"get": {
				"tags": ["Reviews"],
				"summary": "Get a single review",
				"operationId": "getReview",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": { "type": "string" }
					}
				],
				"responses": {
					"500": {
						"description": "Internal Server Error",
						"content": { "*/*": { "schema": { "type": "object" } } }
					},
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/review_details"
								}
							}
						}
					}
				}
			}
		},
		"/organizations/{id}": {
			"get": {
				"tags": ["Organizations"],
				"summary": "Get a single organization",
				"operationId": "getOrganization",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": { "type": "string" }
					}
				],
				"responses": {
					"500": {
						"description": "Internal Server Error",
						"content": { "*/*": { "schema": { "type": "object" } } }
					},
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/organization_details"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{id}": {
			"get": {
				"tags": ["Locations"],
				"summary": "Get a single location",
				"operationId": "getLocation",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": { "type": "string" }
					}
				],
				"responses": {
					"500": {
						"description": "Internal Server Error",
						"content": { "*/*": { "schema": { "type": "object" } } }
					},
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/location_details"
								}
							}
						}
					}
				}
			}
		},
		"/taxonomies": {
			"get": {
				"tags": ["Taxonomies"],
				"summary": "Get all taxonomies",
				"operationId": "getTaxonomies",
				"parameters": [
					{
						"name": "text",
						"in": "query",
						"required": false,
						"schema": { "type": "string" }
					},
					{
						"name": "parent_id",
						"in": "query",
						"required": false,
						"schema": { "type": "string" }
					},
					{
						"name": "vocabulary",
						"in": "query",
						"required": false,
						"schema": { "type": "string" }
					},
					{
						"name": "needs",
						"in": "query",
						"required": false,
						"schema": { "type": "array", "items": { "type": "string" } }
					},
					{
						"name": "circumstances",
						"in": "query",
						"required": false,
						"schema": { "type": "array", "items": { "type": "string" } }
					},
					{
						"name": "root_only",
						"in": "query",
						"required": false,
						"schema": { "type": "boolean" }
					},
					{
						"name": "page",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "format": "int32", "default": 1 }
					},
					{
						"name": "per_page",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "format": "int32", "default": 50 }
					}
				],
				"responses": {
					"500": {
						"description": "Internal Server Error",
						"content": { "*/*": { "schema": { "type": "object" } } }
					},
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"contents": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/taxonomy"
											}
										}
									},
									"allOf": [
										{
											"$ref": "#/components/schemas/page"
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"/services": {
			"get": {
				"tags": ["Services"],
				"summary": "Get all services",
				"description": "Note that the objects returned by this method contains a subset of the properties shown in the example.",
				"operationId": "getServices",
				"parameters": [
					{
						"name": "taxonomy_type",
						"in": "query",
						"description": "An array of types of taxonomy to filter by. If there is more than one of the taxonomy_type, taxonomy_id and vocabulary parameters specified there must be the same number of each.",
						"required": false,
						"content": {
							"*/*": {
								"schema": {
									"type": "string",
									"enum": ["organization", "eligibility", "cost_option", "area", "service"]
								}
							}
						}
					},
					{
						"name": "taxonomy_id",
						"in": "query",
						"description": "An array of taxonomy identifiers to filter by. If there is more than one of the taxonomy_type, taxonomy_id and vocabulary parameters specified there must be the same number of each.",
						"required": false,
						"schema": { "type": "array", "items": { "type": "string" } }
					},
					{
						"name": "vocabulary",
						"in": "query",
						"description": "An array of vocabulary identifiers to filter by. If there is more than one of the taxonomy_type, taxonomy_id and vocabulary parameters specified there must be the same number of each. This parameter may not be required if all taxonomy identifiers are unique across all vocabularies used, as will be the case where all taxonomy identifiers are prefixed with a CURIE.",
						"required": false,
						"schema": { "type": "array", "items": { "type": "string" } }
					},
					{
						"name": "need",
						"in": "query",
						"description": "An array of identifiers from the Needs taxonomy. The query will return services of all service types that are mapped against any given need. THIS IS AN EXTENSION FOR USERS OF LGA TAXONOMIES ONLY",
						"required": false,
						"schema": { "type": "array", "items": { "type": "string" } }
					},
					{
						"name": "circumstance",
						"in": "query",
						"description": "An array of identifiers from the Circumstances taxonomy. The query will return services of all service types that are mapped against any given circumstance. Using an OR. THIS IS AN EXTENSION FOR USERS OF LGA TAXONOMIES ONLY",
						"required": false,
						"schema": { "type": "array", "items": { "type": "string" } }
					},
					{
						"name": "start_time",
						"in": "query",
						"description": "An array of start times. This will match services that have a start time equal to or more that the specified value, using the OR operator. If there is more than one of the start_time, end_time and day parameters specified there must be the same number of each.",
						"required": false,
						"schema": { "type": "array", "items": { "type": "string" } }
					},
					{
						"name": "end_time",
						"in": "query",
						"description": "An array of end times. This will match services that have a end time equal to or more that the specified value, using the OR operator. If there is more than one of the start_time, end_time and day parameters specified there must be the same number of each.",
						"required": false,
						"schema": { "type": "array", "items": { "type": "string" } }
					},
					{
						"name": "day",
						"in": "query",
						"description": "An array of days. This will match services that have a day equal to or more that the specified value, using the OR operator. If there is more than one of the start_time, end_time and day parameters specified there must be the same number of each.",
						"required": false,
						"content": {
							"*/*": {
								"schema": {
									"type": "string",
									"enum": ["SU", "MO", "TU", "WE", "TH", "FR", "SA"]
								}
							}
						}
					},
					{
						"name": "postcode",
						"in": "query",
						"description": "The postcode of the person who wishes to use the service. In order to find services that are within a reasonable distance.",
						"required": false,
						"schema": { "type": "string" }
					},
					{
						"name": "proximity",
						"in": "query",
						"description": "The distance in metres that the person is willing to travel from the target postcode.",
						"required": false,
						"schema": { "type": "number", "format": "double" }
					},
					{
						"name": "coverage",
						"in": "query",
						"description": "The postcode to use to check that a service applies to the specified area.",
						"required": false,
						"schema": { "type": "string" }
					},
					{
						"name": "text",
						"in": "query",
						"description": "Use text to perform a keyword search on services. This performs a full text search on the service title and description and ranks the results by relevancy.",
						"required": false,
						"schema": { "type": "string" }
					},
					{
						"name": "page",
						"in": "query",
						"description": "The page of the results to show. page numbers start at 1.",
						"required": false,
						"schema": { "type": "integer", "format": "int32", "default": 1 }
					},
					{
						"name": "per_page",
						"in": "query",
						"description": "The number of results per page to show.",
						"required": false,
						"schema": { "type": "integer", "format": "int32", "default": 50 }
					},
					{
						"name": "minimum_age",
						"in": "query",
						"description": "Return services with a minimum age of at least the specified value.",
						"required": false,
						"schema": { "type": "number", "format": "float" }
					},
					{
						"name": "maximum_age",
						"in": "query",
						"description": "Return services with a maximum age of at equal to or below the specified value.",
						"required": false,
						"schema": { "type": "number", "format": "float" }
					},
					{
						"name": "include",
						"in": "query",
						"description": "Enter the name of a service field and it will be included in the result. e.g. service_at_locations",
						"required": false,
						"schema": { "type": "array", "items": { "type": "string" } }
					},
					{
						"name": "service_type",
						"in": "query",
						"description": "An array of service type identifiers. The query will return all services of ANY given service type. THIS EXTENSION MAY BE REPLACED BY A GENERIC SYNTAX FOR COMBINING TERMS FROM ANY TAXONOMY",
						"required": false,
						"schema": { "type": "array", "items": { "type": "string" } }
					}
				],
				"responses": {
					"500": {
						"description": "Internal Server Error",
						"content": { "*/*": { "schema": { "type": "object" } } }
					},
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"contents": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/service"
											}
										}
									},
									"allOf": [
										{
											"$ref": "#/components/schemas/page"
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"/reviews": {
			"get": {
				"tags": ["Reviews"],
				"summary": "Get all reviews",
				"description": "Note that the objects returned by this method contains a subset of the properties shown in the example.",
				"operationId": "getReviews",
				"responses": {
					"500": {
						"description": "Internal Server Error",
						"content": { "*/*": { "schema": { "type": "object" } } }
					},
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"contents": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/review"
											}
										}
									},
									"allOf": [
										{
											"$ref": "#/components/schemas/page"
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"/organizations": {
			"get": {
				"tags": ["Organizations"],
				"summary": "Get all organizations",
				"description": "Note that the objects returned by this method contains a subset of the properties shown in the example.",
				"operationId": "getOrganizations",
				"parameters": [
					{
						"name": "taxonomy",
						"in": "query",
						"required": false,
						"schema": { "type": "string" }
					},
					{
						"name": "scheme",
						"in": "query",
						"required": false,
						"schema": { "type": "string" }
					}
				],
				"responses": {
					"500": {
						"description": "Internal Server Error",
						"content": { "*/*": { "schema": { "type": "object" } } }
					},
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"contents": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/organization"
											}
										}
									},
									"allOf": [
										{
											"$ref": "#/components/schemas/page"
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"/locations": {
			"get": {
				"tags": ["Locations"],
				"summary": "Get all locations",
				"description": "Note that the objects returned by this method contains a subset of the properties shown in the example.",
				"operationId": "getLocations",
				"responses": {
					"500": {
						"description": "Internal Server Error",
						"content": { "*/*": { "schema": { "type": "object" } } }
					},
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"contents": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/location"
											}
										}
									},
									"allOf": [
										{
											"$ref": "#/components/schemas/page"
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"/vocabularies": {
			"get": {
				"tags": ["Vocabularies"],
				"summary": "Get all vocabularies",
				"operationId": "getVocabularies",
				"responses": {
					"500": {
						"description": "Internal Server Error",
						"content": { "*/*": { "schema": { "type": "object" } } }
					},
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": { "type": "array", "items": { "type": "string" } }
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"page": {
				"type": "object",
				"properties": {
					"totalElements": { "type": "integer", "format": "int64" },
					"totalPages": { "type": "integer", "format": "int32" },
					"number": { "type": "integer", "format": "int32" },
					"size": { "type": "integer", "format": "int32" },
					"first": { "type": "boolean" },
					"last": { "type": "boolean" },
					"empty": { "type": "boolean" }
				}
			},
			"service": {
				"title": "service",
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"description": "Each service must have a unique identifier."
					},
					"organization": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string",
								"pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
								"description": "Each organization must have a unique identifier."
							},
							"name": {
								"type": "string",
								"description": "The official or public name of the organization."
							},
							"description": {
								"type": "string",
								"description": "A brief summary about the organization. It can contain markup such as HTML or Markdown."
							},
							"email": {
								"type": "string",
								"format": "email",
								"description": "The contact e-mail address for the organization."
							},
							"url": {
								"type": "string",
								"format": "uri",
								"pattern": "^(https?|wss?|ftp)://",
								"description": "The URL (website address) of the organization."
							},
							"logo": {
								"type": "string",
								"description": "A URL to an image associated with the organization which can be presented alongside its name."
							},
							"uri": {
								"type": "string",
								"format": "uri",
								"pattern": "^(https?|wss?|ftp)://",
								"description": "A persistent identifier to uniquely identify the organization."
							}
						},
						"required": ["id", "name", "description"]
					},
					"name": {
						"type": "string",
						"description": "The official or public name of the service."
					},
					"description": {
						"type": "string",
						"description": "A description of the service.  It can contain markup such as HTML or Markdown."
					},
					"url": {
						"type": "string",
						"format": "uri",
						"pattern": "^(https?|wss?|ftp)://",
						"description": "URL of the service"
					},
					"email": {
						"type": "string",
						"format": "email",
						"description": "Email address for the service"
					},
					"status": {
						"type": "string",
						"description": "The current status of the service.",
						"enum": ["active", "inactive", "defunct", "temporarily closed"]
					},
					"fees": {
						"type": "string",
						"description": "Details of any charges for service users to access this service.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. LGA defines an extension table for 'cost_option'.  This 'fees' field can contain a single human-readable description of costs.  The 'cost_option' table can optionally add a further breakdown that can be filtered on."
					},
					"accreditations": {
						"type": "string",
						"description": "Details of any accreditations. Accreditation is the formal evaluation of an organization or program against best practice standards set by an accrediting organization.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. LGA defines an extension table for 'review'.  This 'accreditations' field can contain a single human-readable description of reviews.  The 'review' table can optionally add a further breakdown that can be filtered on."
					},
					"deliverable_type": {
						"type": "string",
						"description": "A categorisation of the nature of the output of the Service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy rather than an enueration in future versions",
						"enum": [
							"Advice",
							"Assessment",
							"Counselling",
							"Equipment",
							"Financial Support",
							"Information",
							"Permission",
							"Training"
						]
					},
					"assured_date": {
						"type": "string",
						"description": "The date that the information about the service was last checked"
					},
					"attending_type": {
						"type": "string",
						"description": "How to attend this service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy ratehr than an enueration in future versions",
						"enum": ["phone", "online", "venue", "home visit"]
					},
					"attending_access": {
						"type": "string",
						"description": "Access restrictions for this service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy ratehr than an enueration in future versions",
						"enum": ["referral", "appointment", "membership", "drop-in"]
					}
				},
				"required": ["id", "organization", "name"]
			},
			"service_details": {
				"title": "service",
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"description": "Each service must have a unique identifier."
					},
					"organization": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string",
								"pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
								"description": "Each organization must have a unique identifier."
							},
							"name": {
								"type": "string",
								"description": "The official or public name of the organization."
							},
							"description": {
								"type": "string",
								"description": "A brief summary about the organization. It can contain markup such as HTML or Markdown."
							},
							"email": {
								"type": "string",
								"format": "email",
								"description": "The contact e-mail address for the organization."
							},
							"url": {
								"type": "string",
								"format": "uri",
								"pattern": "^(https?|wss?|ftp)://",
								"description": "The URL (website address) of the organization."
							},
							"logo": {
								"type": "string",
								"description": "A URL to an image associated with the organization which can be presented alongside its name."
							},
							"uri": {
								"type": "string",
								"format": "uri",
								"pattern": "^(https?|wss?|ftp)://",
								"description": "A persistent identifier to uniquely identify the organization."
							}
						},
						"required": ["id", "name", "description"]
					},
					"name": {
						"type": "string",
						"description": "The official or public name of the service."
					},
					"description": {
						"type": "string",
						"description": "A description of the service.  It can contain markup such as HTML or Markdown."
					},
					"url": {
						"type": "string",
						"format": "uri",
						"pattern": "^(https?|wss?|ftp)://",
						"description": "URL of the service"
					},
					"email": {
						"type": "string",
						"format": "email",
						"description": "Email address for the service"
					},
					"status": {
						"type": "string",
						"description": "The current status of the service.",
						"enum": ["active", "inactive", "defunct", "temporarily closed"]
					},
					"fees": {
						"type": "string",
						"description": "Details of any charges for service users to access this service.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. LGA defines an extension table for 'cost_option'.  This 'fees' field can contain a single human-readable description of costs.  The 'cost_option' table can optionally add a further breakdown that can be filtered on."
					},
					"accreditations": {
						"type": "string",
						"description": "Details of any accreditations. Accreditation is the formal evaluation of an organization or program against best practice standards set by an accrediting organization.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. LGA defines an extension table for 'review'.  This 'accreditations' field can contain a single human-readable description of reviews.  The 'review' table can optionally add a further breakdown that can be filtered on."
					},
					"deliverable_type": {
						"type": "string",
						"description": "A categorisation of the nature of the output of the Service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy rather than an enueration in future versions",
						"enum": [
							"Advice",
							"Assessment",
							"Counselling",
							"Equipment",
							"Financial Support",
							"Information",
							"Permission",
							"Training"
						]
					},
					"assured_date": {
						"type": "string",
						"description": "The date that the information about the service was last checked"
					},
					"attending_type": {
						"type": "string",
						"description": "How to attend this service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy ratehr than an enueration in future versions",
						"enum": ["phone", "online", "venue", "home visit"]
					},
					"attending_access": {
						"type": "string",
						"description": "Access restrictions for this service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy ratehr than an enueration in future versions",
						"enum": ["referral", "appointment", "membership", "drop-in"]
					}
				},
				"required": ["id", "organization", "name"]
			},
			"taxonomy": {
				"required": ["id", "name"],
				"type": "object",
				"properties": {
					"id": { "maxLength": 1536, "minLength": 1, "type": "string" },
					"name": { "maxLength": 65535, "minLength": 1, "type": "string" },
					"vocabulary": {
						"maxLength": 65535,
						"minLength": 0,
						"type": "string"
					}
				}
			},
			"review": {
				"title": "review",
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"description": "Each entry must have a unique identifier"
					},
					"service": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string",
								"description": "Each service must have a unique identifier."
							},
							"organization": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
										"description": "Each organization must have a unique identifier."
									},
									"name": {
										"type": "string",
										"description": "The official or public name of the organization."
									},
									"description": {
										"type": "string",
										"description": "A brief summary about the organization. It can contain markup such as HTML or Markdown."
									},
									"email": {
										"type": "string",
										"format": "email",
										"description": "The contact e-mail address for the organization."
									},
									"url": {
										"type": "string",
										"format": "uri",
										"pattern": "^(https?|wss?|ftp)://",
										"description": "The URL (website address) of the organization."
									},
									"logo": {
										"type": "string",
										"description": "A URL to an image associated with the organization which can be presented alongside its name."
									},
									"uri": {
										"type": "string",
										"format": "uri",
										"pattern": "^(https?|wss?|ftp)://",
										"description": "A persistent identifier to uniquely identify the organization."
									}
								},
								"required": ["id", "name", "description"]
							},
							"name": {
								"type": "string",
								"description": "The official or public name of the service."
							},
							"description": {
								"type": "string",
								"description": "A description of the service.  It can contain markup such as HTML or Markdown."
							},
							"url": {
								"type": "string",
								"format": "uri",
								"pattern": "^(https?|wss?|ftp)://",
								"description": "URL of the service"
							},
							"email": {
								"type": "string",
								"format": "email",
								"description": "Email address for the service"
							},
							"status": {
								"type": "string",
								"description": "The current status of the service.",
								"enum": ["active", "inactive", "defunct", "temporarily closed"]
							},
							"fees": {
								"type": "string",
								"description": "Details of any charges for service users to access this service.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. LGA defines an extension table for 'cost_option'.  This 'fees' field can contain a single human-readable description of costs.  The 'cost_option' table can optionally add a further breakdown that can be filtered on."
							},
							"accreditations": {
								"type": "string",
								"description": "Details of any accreditations. Accreditation is the formal evaluation of an organization or program against best practice standards set by an accrediting organization.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. LGA defines an extension table for 'review'.  This 'accreditations' field can contain a single human-readable description of reviews.  The 'review' table can optionally add a further breakdown that can be filtered on."
							},
							"deliverable_type": {
								"type": "string",
								"description": "A categorisation of the nature of the output of the Service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy rather than an enueration in future versions",
								"enum": [
									"Advice",
									"Assessment",
									"Counselling",
									"Equipment",
									"Financial Support",
									"Information",
									"Permission",
									"Training"
								]
							},
							"assured_date": {
								"type": "string",
								"description": "The date that the information about the service was last checked"
							},
							"attending_type": {
								"type": "string",
								"description": "How to attend this service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy ratehr than an enueration in future versions",
								"enum": ["phone", "online", "venue", "home visit"]
							},
							"attending_access": {
								"type": "string",
								"description": "Access restrictions for this service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy ratehr than an enueration in future versions",
								"enum": ["referral", "appointment", "membership", "drop-in"]
							}
						},
						"required": ["id", "organization", "name"]
					},
					"organization": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string",
								"pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
								"description": "Each organization must have a unique identifier."
							},
							"name": {
								"type": "string",
								"description": "The official or public name of the organization."
							},
							"description": {
								"type": "string",
								"description": "A brief summary about the organization. It can contain markup such as HTML or Markdown."
							},
							"email": {
								"type": "string",
								"format": "email",
								"description": "The contact e-mail address for the organization."
							},
							"url": {
								"type": "string",
								"format": "uri",
								"pattern": "^(https?|wss?|ftp)://",
								"description": "The URL (website address) of the organization."
							},
							"logo": {
								"type": "string",
								"description": "A URL to an image associated with the organization which can be presented alongside its name."
							},
							"uri": {
								"type": "string",
								"format": "uri",
								"pattern": "^(https?|wss?|ftp)://",
								"description": "A persistent identifier to uniquely identify the organization."
							}
						},
						"required": ["id", "name", "description"]
					},
					"title": {
						"type": "string",
						"description": "The title of the review"
					},
					"description": {
						"type": "string",
						"description": "A detailed description of this review"
					},
					"date": {
						"type": "string",
						"format": "date",
						"description": "The date of the review"
					},
					"score": {
						"type": "string",
						"description": "The review score\r\n\r\nApplication Profile Notes: e.g. '3 star'"
					},
					"url": {
						"type": "string",
						"description": "A URL were the review can be read"
					},
					"widget": {
						"type": "string",
						"description": "Code that can be embedded into a web page to give more information about a review."
					}
				},
				"required": ["id", "service"]
			},
			"review_details": {
				"title": "review",
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"description": "Each entry must have a unique identifier"
					},
					"service": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string",
								"description": "Each service must have a unique identifier."
							},
							"organization": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string",
										"pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
										"description": "Each organization must have a unique identifier."
									},
									"name": {
										"type": "string",
										"description": "The official or public name of the organization."
									},
									"description": {
										"type": "string",
										"description": "A brief summary about the organization. It can contain markup such as HTML or Markdown."
									},
									"email": {
										"type": "string",
										"format": "email",
										"description": "The contact e-mail address for the organization."
									},
									"url": {
										"type": "string",
										"format": "uri",
										"pattern": "^(https?|wss?|ftp)://",
										"description": "The URL (website address) of the organization."
									},
									"logo": {
										"type": "string",
										"description": "A URL to an image associated with the organization which can be presented alongside its name."
									},
									"uri": {
										"type": "string",
										"format": "uri",
										"pattern": "^(https?|wss?|ftp)://",
										"description": "A persistent identifier to uniquely identify the organization."
									}
								},
								"required": ["id", "name", "description"]
							},
							"name": {
								"type": "string",
								"description": "The official or public name of the service."
							},
							"description": {
								"type": "string",
								"description": "A description of the service.  It can contain markup such as HTML or Markdown."
							},
							"url": {
								"type": "string",
								"format": "uri",
								"pattern": "^(https?|wss?|ftp)://",
								"description": "URL of the service"
							},
							"email": {
								"type": "string",
								"format": "email",
								"description": "Email address for the service"
							},
							"status": {
								"type": "string",
								"description": "The current status of the service.",
								"enum": ["active", "inactive", "defunct", "temporarily closed"]
							},
							"fees": {
								"type": "string",
								"description": "Details of any charges for service users to access this service.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. LGA defines an extension table for 'cost_option'.  This 'fees' field can contain a single human-readable description of costs.  The 'cost_option' table can optionally add a further breakdown that can be filtered on."
							},
							"accreditations": {
								"type": "string",
								"description": "Details of any accreditations. Accreditation is the formal evaluation of an organization or program against best practice standards set by an accrediting organization.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. LGA defines an extension table for 'review'.  This 'accreditations' field can contain a single human-readable description of reviews.  The 'review' table can optionally add a further breakdown that can be filtered on."
							},
							"deliverable_type": {
								"type": "string",
								"description": "A categorisation of the nature of the output of the Service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy rather than an enueration in future versions",
								"enum": [
									"Advice",
									"Assessment",
									"Counselling",
									"Equipment",
									"Financial Support",
									"Information",
									"Permission",
									"Training"
								]
							},
							"assured_date": {
								"type": "string",
								"description": "The date that the information about the service was last checked"
							},
							"attending_type": {
								"type": "string",
								"description": "How to attend this service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy ratehr than an enueration in future versions",
								"enum": ["phone", "online", "venue", "home visit"]
							},
							"attending_access": {
								"type": "string",
								"description": "Access restrictions for this service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy ratehr than an enueration in future versions",
								"enum": ["referral", "appointment", "membership", "drop-in"]
							}
						},
						"required": ["id", "organization", "name"]
					},
					"organization": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string",
								"pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
								"description": "Each organization must have a unique identifier."
							},
							"name": {
								"type": "string",
								"description": "The official or public name of the organization."
							},
							"description": {
								"type": "string",
								"description": "A brief summary about the organization. It can contain markup such as HTML or Markdown."
							},
							"email": {
								"type": "string",
								"format": "email",
								"description": "The contact e-mail address for the organization."
							},
							"url": {
								"type": "string",
								"format": "uri",
								"pattern": "^(https?|wss?|ftp)://",
								"description": "The URL (website address) of the organization."
							},
							"logo": {
								"type": "string",
								"description": "A URL to an image associated with the organization which can be presented alongside its name."
							},
							"uri": {
								"type": "string",
								"format": "uri",
								"pattern": "^(https?|wss?|ftp)://",
								"description": "A persistent identifier to uniquely identify the organization."
							}
						},
						"required": ["id", "name", "description"]
					},
					"title": {
						"type": "string",
						"description": "The title of the review"
					},
					"description": {
						"type": "string",
						"description": "A detailed description of this review"
					},
					"date": {
						"type": "string",
						"format": "date",
						"description": "The date of the review"
					},
					"score": {
						"type": "string",
						"description": "The review score\r\n\r\nApplication Profile Notes: e.g. '3 star'"
					},
					"url": {
						"type": "string",
						"description": "A URL were the review can be read"
					},
					"widget": {
						"type": "string",
						"description": "Code that can be embedded into a web page to give more information about a review."
					}
				},
				"required": ["id", "service"]
			},
			"organization": {
				"title": "organization",
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
						"description": "Each organization must have a unique identifier."
					},
					"name": {
						"type": "string",
						"description": "The official or public name of the organization."
					},
					"description": {
						"type": "string",
						"description": "A brief summary about the organization. It can contain markup such as HTML or Markdown."
					},
					"email": {
						"type": "string",
						"format": "email",
						"description": "The contact e-mail address for the organization."
					},
					"url": {
						"type": "string",
						"format": "uri",
						"pattern": "^(https?|wss?|ftp)://",
						"description": "The URL (website address) of the organization."
					},
					"logo": {
						"type": "string",
						"description": "A URL to an image associated with the organization which can be presented alongside its name."
					},
					"uri": {
						"type": "string",
						"format": "uri",
						"pattern": "^(https?|wss?|ftp)://",
						"description": "A persistent identifier to uniquely identify the organization."
					}
				},
				"required": ["id", "name", "description"]
			},
			"organization_details": {
				"title": "organization",
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
						"description": "Each organization must have a unique identifier."
					},
					"name": {
						"type": "string",
						"description": "The official or public name of the organization."
					},
					"description": {
						"type": "string",
						"description": "A brief summary about the organization. It can contain markup such as HTML or Markdown."
					},
					"email": {
						"type": "string",
						"format": "email",
						"description": "The contact e-mail address for the organization."
					},
					"url": {
						"type": "string",
						"format": "uri",
						"pattern": "^(https?|wss?|ftp)://",
						"description": "The URL (website address) of the organization."
					},
					"logo": {
						"type": "string",
						"description": "A URL to an image associated with the organization which can be presented alongside its name."
					},
					"uri": {
						"type": "string",
						"format": "uri",
						"pattern": "^(https?|wss?|ftp)://",
						"description": "A persistent identifier to uniquely identify the organization."
					},
					"services": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string",
									"description": "Each service must have a unique identifier."
								},
								"name": {
									"type": "string",
									"description": "The official or public name of the service."
								},
								"description": {
									"type": "string",
									"description": "A description of the service.  It can contain markup such as HTML or Markdown."
								},
								"url": {
									"type": "string",
									"format": "uri",
									"pattern": "^(https?|wss?|ftp)://",
									"description": "URL of the service"
								},
								"email": {
									"type": "string",
									"format": "email",
									"description": "Email address for the service"
								},
								"status": {
									"type": "string",
									"description": "The current status of the service.",
									"enum": ["active", "inactive", "defunct", "temporarily closed"]
								},
								"fees": {
									"type": "string",
									"description": "Details of any charges for service users to access this service.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. LGA defines an extension table for 'cost_option'.  This 'fees' field can contain a single human-readable description of costs.  The 'cost_option' table can optionally add a further breakdown that can be filtered on."
								},
								"accreditations": {
									"type": "string",
									"description": "Details of any accreditations. Accreditation is the formal evaluation of an organization or program against best practice standards set by an accrediting organization.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. LGA defines an extension table for 'review'.  This 'accreditations' field can contain a single human-readable description of reviews.  The 'review' table can optionally add a further breakdown that can be filtered on."
								},
								"deliverable_type": {
									"type": "string",
									"description": "A categorisation of the nature of the output of the Service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy rather than an enueration in future versions",
									"enum": [
										"Advice",
										"Assessment",
										"Counselling",
										"Equipment",
										"Financial Support",
										"Information",
										"Permission",
										"Training"
									]
								},
								"assured_date": {
									"type": "string",
									"description": "The date that the information about the service was last checked"
								},
								"attending_type": {
									"type": "string",
									"description": "How to attend this service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy ratehr than an enueration in future versions",
									"enum": ["phone", "online", "venue", "home visit"]
								},
								"attending_access": {
									"type": "string",
									"description": "Access restrictions for this service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy ratehr than an enueration in future versions",
									"enum": ["referral", "appointment", "membership", "drop-in"]
								}
							},
							"required": ["id", "name"]
						}
					},
					"reviews": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string",
									"description": "Each entry must have a unique identifier"
								},
								"service": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"description": "Each service must have a unique identifier."
										},
										"name": {
											"type": "string",
											"description": "The official or public name of the service."
										},
										"description": {
											"type": "string",
											"description": "A description of the service.  It can contain markup such as HTML or Markdown."
										},
										"url": {
											"type": "string",
											"format": "uri",
											"pattern": "^(https?|wss?|ftp)://",
											"description": "URL of the service"
										},
										"email": {
											"type": "string",
											"format": "email",
											"description": "Email address for the service"
										},
										"status": {
											"type": "string",
											"description": "The current status of the service.",
											"enum": ["active", "inactive", "defunct", "temporarily closed"]
										},
										"fees": {
											"type": "string",
											"description": "Details of any charges for service users to access this service.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. LGA defines an extension table for 'cost_option'.  This 'fees' field can contain a single human-readable description of costs.  The 'cost_option' table can optionally add a further breakdown that can be filtered on."
										},
										"accreditations": {
											"type": "string",
											"description": "Details of any accreditations. Accreditation is the formal evaluation of an organization or program against best practice standards set by an accrediting organization.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. LGA defines an extension table for 'review'.  This 'accreditations' field can contain a single human-readable description of reviews.  The 'review' table can optionally add a further breakdown that can be filtered on."
										},
										"deliverable_type": {
											"type": "string",
											"description": "A categorisation of the nature of the output of the Service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy rather than an enueration in future versions",
											"enum": [
												"Advice",
												"Assessment",
												"Counselling",
												"Equipment",
												"Financial Support",
												"Information",
												"Permission",
												"Training"
											]
										},
										"assured_date": {
											"type": "string",
											"description": "The date that the information about the service was last checked"
										},
										"attending_type": {
											"type": "string",
											"description": "How to attend this service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy ratehr than an enueration in future versions",
											"enum": ["phone", "online", "venue", "home visit"]
										},
										"attending_access": {
											"type": "string",
											"description": "Access restrictions for this service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy ratehr than an enueration in future versions",
											"enum": ["referral", "appointment", "membership", "drop-in"]
										}
									},
									"required": ["id", "name"]
								},
								"title": {
									"type": "string",
									"description": "The title of the review"
								},
								"description": {
									"type": "string",
									"description": "A detailed description of this review"
								},
								"date": {
									"type": "string",
									"format": "date",
									"description": "The date of the review"
								},
								"score": {
									"type": "string",
									"description": "The review score\r\n\r\nApplication Profile Notes: e.g. '3 star'"
								},
								"url": {
									"type": "string",
									"description": "A URL were the review can be read"
								},
								"widget": {
									"type": "string",
									"description": "Code that can be embedded into a web page to give more information about a review."
								}
							},
							"required": ["id", "service"]
						}
					},
					"link_taxonomies": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string",
									"description": "A unique identifier for the link taxonomy"
								},
								"link_type": {
									"type": "string",
									"description": "The class that the taxonomy applies to",
									"enum": ["organization", "eligibility", "cost_option", "service_area"]
								},
								"eligibility": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"description": "Each entry must have a unique identifier"
										},
										"service": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string",
													"description": "Each service must have a unique identifier."
												},
												"name": {
													"type": "string",
													"description": "The official or public name of the service."
												},
												"description": {
													"type": "string",
													"description": "A description of the service.  It can contain markup such as HTML or Markdown."
												},
												"url": {
													"type": "string",
													"format": "uri",
													"pattern": "^(https?|wss?|ftp)://",
													"description": "URL of the service"
												},
												"email": {
													"type": "string",
													"format": "email",
													"description": "Email address for the service"
												},
												"status": {
													"type": "string",
													"description": "The current status of the service.",
													"enum": ["active", "inactive", "defunct", "temporarily closed"]
												},
												"fees": {
													"type": "string",
													"description": "Details of any charges for service users to access this service.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. LGA defines an extension table for 'cost_option'.  This 'fees' field can contain a single human-readable description of costs.  The 'cost_option' table can optionally add a further breakdown that can be filtered on."
												},
												"accreditations": {
													"type": "string",
													"description": "Details of any accreditations. Accreditation is the formal evaluation of an organization or program against best practice standards set by an accrediting organization.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. LGA defines an extension table for 'review'.  This 'accreditations' field can contain a single human-readable description of reviews.  The 'review' table can optionally add a further breakdown that can be filtered on."
												},
												"deliverable_type": {
													"type": "string",
													"description": "A categorisation of the nature of the output of the Service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy rather than an enueration in future versions",
													"enum": [
														"Advice",
														"Assessment",
														"Counselling",
														"Equipment",
														"Financial Support",
														"Information",
														"Permission",
														"Training"
													]
												},
												"assured_date": {
													"type": "string",
													"description": "The date that the information about the service was last checked"
												},
												"attending_type": {
													"type": "string",
													"description": "How to attend this service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy ratehr than an enueration in future versions",
													"enum": ["phone", "online", "venue", "home visit"]
												},
												"attending_access": {
													"type": "string",
													"description": "Access restrictions for this service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy ratehr than an enueration in future versions",
													"enum": ["referral", "appointment", "membership", "drop-in"]
												}
											},
											"required": ["id", "name"]
										},
										"eligibility": {
											"type": "string",
											"description": "The rules or guidelines that determine who can receive the service.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. OR permitted values should be removed from the LGA Application Profile.",
											"enum": [
												"adult",
												"child",
												"teen",
												"family",
												"female",
												"male",
												"Transgender",
												"Transgender - M to F",
												"Transgender - F to M"
											]
										},
										"minimum_age": {
											"type": "number",
											"description": "The minimum age required to meet this eligibility requirement."
										},
										"maximum_age": {
											"type": "number",
											"description": "The maximum age required to meet this eligibility requirement."
										}
									},
									"required": ["id", "service", "minimum_age", "maximum_age"]
								},
								"service_area": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"description": "Each service area must have a unique identifier"
										},
										"service": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string",
													"description": "Each service must have a unique identifier."
												},
												"name": {
													"type": "string",
													"description": "The official or public name of the service."
												},
												"description": {
													"type": "string",
													"description": "A description of the service.  It can contain markup such as HTML or Markdown."
												},
												"url": {
													"type": "string",
													"format": "uri",
													"pattern": "^(https?|wss?|ftp)://",
													"description": "URL of the service"
												},
												"email": {
													"type": "string",
													"format": "email",
													"description": "Email address for the service"
												},
												"status": {
													"type": "string",
													"description": "The current status of the service.",
													"enum": ["active", "inactive", "defunct", "temporarily closed"]
												},
												"fees": {
													"type": "string",
													"description": "Details of any charges for service users to access this service.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. LGA defines an extension table for 'cost_option'.  This 'fees' field can contain a single human-readable description of costs.  The 'cost_option' table can optionally add a further breakdown that can be filtered on."
												},
												"accreditations": {
													"type": "string",
													"description": "Details of any accreditations. Accreditation is the formal evaluation of an organization or program against best practice standards set by an accrediting organization.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. LGA defines an extension table for 'review'.  This 'accreditations' field can contain a single human-readable description of reviews.  The 'review' table can optionally add a further breakdown that can be filtered on."
												},
												"deliverable_type": {
													"type": "string",
													"description": "A categorisation of the nature of the output of the Service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy rather than an enueration in future versions",
													"enum": [
														"Advice",
														"Assessment",
														"Counselling",
														"Equipment",
														"Financial Support",
														"Information",
														"Permission",
														"Training"
													]
												},
												"assured_date": {
													"type": "string",
													"description": "The date that the information about the service was last checked"
												},
												"attending_type": {
													"type": "string",
													"description": "How to attend this service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy ratehr than an enueration in future versions",
													"enum": ["phone", "online", "venue", "home visit"]
												},
												"attending_access": {
													"type": "string",
													"description": "Access restrictions for this service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy ratehr than an enueration in future versions",
													"enum": ["referral", "appointment", "membership", "drop-in"]
												}
											},
											"required": ["id", "name"]
										},
										"service_area": {
											"type": "string",
											"description": "The geographic area where a service is available. This is a free-text description, and so may be precise or indefinite as necessary."
										},
										"extent": {
											"type": "string",
											"description": "A definition of the polygon defining the area, in geojson."
										},
										"uri": {
											"type": "string",
											"description": "A persistent identifier to identify an area."
										}
									},
									"required": ["id", "service"]
								},
								"cost_option": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"description": "Each entry must have a unique identifier"
										},
										"service": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string",
													"description": "Each service must have a unique identifier."
												},
												"name": {
													"type": "string",
													"description": "The official or public name of the service."
												},
												"description": {
													"type": "string",
													"description": "A description of the service.  It can contain markup such as HTML or Markdown."
												},
												"url": {
													"type": "string",
													"format": "uri",
													"pattern": "^(https?|wss?|ftp)://",
													"description": "URL of the service"
												},
												"email": {
													"type": "string",
													"format": "email",
													"description": "Email address for the service"
												},
												"status": {
													"type": "string",
													"description": "The current status of the service.",
													"enum": ["active", "inactive", "defunct", "temporarily closed"]
												},
												"fees": {
													"type": "string",
													"description": "Details of any charges for service users to access this service.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. LGA defines an extension table for 'cost_option'.  This 'fees' field can contain a single human-readable description of costs.  The 'cost_option' table can optionally add a further breakdown that can be filtered on."
												},
												"accreditations": {
													"type": "string",
													"description": "Details of any accreditations. Accreditation is the formal evaluation of an organization or program against best practice standards set by an accrediting organization.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. LGA defines an extension table for 'review'.  This 'accreditations' field can contain a single human-readable description of reviews.  The 'review' table can optionally add a further breakdown that can be filtered on."
												},
												"deliverable_type": {
													"type": "string",
													"description": "A categorisation of the nature of the output of the Service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy rather than an enueration in future versions",
													"enum": [
														"Advice",
														"Assessment",
														"Counselling",
														"Equipment",
														"Financial Support",
														"Information",
														"Permission",
														"Training"
													]
												},
												"assured_date": {
													"type": "string",
													"description": "The date that the information about the service was last checked"
												},
												"attending_type": {
													"type": "string",
													"description": "How to attend this service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy ratehr than an enueration in future versions",
													"enum": ["phone", "online", "venue", "home visit"]
												},
												"attending_access": {
													"type": "string",
													"description": "Access restrictions for this service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy ratehr than an enueration in future versions",
													"enum": ["referral", "appointment", "membership", "drop-in"]
												}
											},
											"required": ["id", "name"]
										},
										"valid_from": {
											"type": "string",
											"format": "date",
											"description": "When this price is valid from"
										},
										"valid_to": {
											"type": "string",
											"format": "date",
											"description": "When this price is valid to"
										},
										"option": {
											"type": "string",
											"description": "Conditions associated with the cost option.\r\n\r\nApplication Profile Notes: e.g.<ul><li>For the over 60's</li><li>1st session</li></ul>"
										},
										"amount": {
											"type": "number",
											"pattern": "currency",
											"description": "The cost of the option, expresssed as an amount in a currency (expected to be GBP by Open Referral UK)."
										},
										"amount_description": {
											"type": "string",
											"description": "Specific details qualifying the cost amount, e.g. 'per session'"
										}
									},
									"required": ["id", "service"]
								},
								"link_id": {
									"type": "string",
									"description": "The identifier of the class"
								},
								"taxonomy": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"description": "Each taxonomy entry must have a unique identifier. If combining multiple taxonomies with overlapping identifiers, use a prefix to distinguish them. The prefix can be a CURIE which must be resolvable by all software consuming the data."
										},
										"name": {
											"type": "string",
											"description": "The name of this taxonomy term or category."
										},
										"parent_id": {
											"type": "string",
											"description": "If this is a child category in a hierarchical taxonomy, give the identifier of the parent category. For top-level categories, this should be left blank."
										},
										"vocabulary": {
											"type": "string",
											"description": "If this is an established taxonomy, detail which taxonomy is in use. For example, AIRS or Open Eligibility."
										}
									},
									"required": ["id", "name"]
								}
							},
							"required": ["id", "link_type", "link_id", "taxonomy"]
						}
					}
				},
				"required": ["id", "name", "description"]
			},
			"location": {
				"title": "location",
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"description": "Each location must have a unique identifier"
					},
					"name": {
						"type": "string",
						"description": "The name of the location"
					},
					"description": {
						"type": "string",
						"description": "A description of this location."
					},
					"latitude": {
						"type": "number",
						"description": "Y coordinate of location expressed in decimal degrees in WGS84 datum."
					},
					"longitude": {
						"type": "number",
						"description": "X coordinate of location expressed in decimal degrees in WGS84 datum."
					}
				},
				"required": ["id"]
			},
			"location_details": {
				"title": "location",
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"description": "Each location must have a unique identifier"
					},
					"name": {
						"type": "string",
						"description": "The name of the location"
					},
					"description": {
						"type": "string",
						"description": "A description of this location."
					},
					"latitude": {
						"type": "number",
						"description": "Y coordinate of location expressed in decimal degrees in WGS84 datum."
					},
					"longitude": {
						"type": "number",
						"description": "X coordinate of location expressed in decimal degrees in WGS84 datum."
					},
					"service_at_locations": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string",
									"description": "Each entry must have a unique identifier."
								},
								"service": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"description": "Each service must have a unique identifier."
										},
										"organization": {
											"type": "object",
											"properties": {
												"id": {
													"type": "string",
													"pattern": "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
													"description": "Each organization must have a unique identifier."
												},
												"name": {
													"type": "string",
													"description": "The official or public name of the organization."
												},
												"description": {
													"type": "string",
													"description": "A brief summary about the organization. It can contain markup such as HTML or Markdown."
												},
												"email": {
													"type": "string",
													"format": "email",
													"description": "The contact e-mail address for the organization."
												},
												"url": {
													"type": "string",
													"format": "uri",
													"pattern": "^(https?|wss?|ftp)://",
													"description": "The URL (website address) of the organization."
												},
												"logo": {
													"type": "string",
													"description": "A URL to an image associated with the organization which can be presented alongside its name."
												},
												"uri": {
													"type": "string",
													"format": "uri",
													"pattern": "^(https?|wss?|ftp)://",
													"description": "A persistent identifier to uniquely identify the organization."
												}
											},
											"required": ["id", "name", "description"]
										},
										"name": {
											"type": "string",
											"description": "The official or public name of the service."
										},
										"description": {
											"type": "string",
											"description": "A description of the service.  It can contain markup such as HTML or Markdown."
										},
										"url": {
											"type": "string",
											"format": "uri",
											"pattern": "^(https?|wss?|ftp)://",
											"description": "URL of the service"
										},
										"email": {
											"type": "string",
											"format": "email",
											"description": "Email address for the service"
										},
										"status": {
											"type": "string",
											"description": "The current status of the service.",
											"enum": ["active", "inactive", "defunct", "temporarily closed"]
										},
										"fees": {
											"type": "string",
											"description": "Details of any charges for service users to access this service.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. LGA defines an extension table for 'cost_option'.  This 'fees' field can contain a single human-readable description of costs.  The 'cost_option' table can optionally add a further breakdown that can be filtered on."
										},
										"accreditations": {
											"type": "string",
											"description": "Details of any accreditations. Accreditation is the formal evaluation of an organization or program against best practice standards set by an accrediting organization.\r\n\r\nApplication Profile Notes: Use structured information where available in preference to this text field. LGA defines an extension table for 'review'.  This 'accreditations' field can contain a single human-readable description of reviews.  The 'review' table can optionally add a further breakdown that can be filtered on."
										},
										"deliverable_type": {
											"type": "string",
											"description": "A categorisation of the nature of the output of the Service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy rather than an enueration in future versions",
											"enum": [
												"Advice",
												"Assessment",
												"Counselling",
												"Equipment",
												"Financial Support",
												"Information",
												"Permission",
												"Training"
											]
										},
										"assured_date": {
											"type": "string",
											"description": "The date that the information about the service was last checked"
										},
										"attending_type": {
											"type": "string",
											"description": "How to attend this service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy ratehr than an enueration in future versions",
											"enum": ["phone", "online", "venue", "home visit"]
										},
										"attending_access": {
											"type": "string",
											"description": "Access restrictions for this service.\r\n\r\nApplication Profile Notes: Expected to reference a taxonomy ratehr than an enueration in future versions",
											"enum": ["referral", "appointment", "membership", "drop-in"]
										}
									},
									"required": ["id", "organization", "name"]
								}
							},
							"required": ["id", "service"]
						}
					},
					"physical_addresses": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string",
									"description": "Each physical address must have a unique identifier."
								},
								"address_1": {
									"type": "string",
									"description": "The first line(s) of the address, including office, building number and street."
								},
								"city": {
									"type": "string",
									"description": "The city in which the address is located."
								},
								"state_province": {
									"type": "string",
									"description": "The state or province in which the address is located."
								},
								"postal_code": {
									"type": "string",
									"description": "The postal code for the address."
								},
								"country": {
									"type": "string",
									"description": "The country in which the address is located. This should be given as an ISO 3361-1 country code (two letter abbreviation).\r\n\r\nApplication Profile Notes: Use 'GB'"
								}
							},
							"required": ["id", "city", "state_province", "postal_code", "country"]
						}
					},
					"accessibility_for_disabilities": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string",
									"description": "Each entry must have a unique identifier"
								},
								"accessibility": {
									"type": "string",
									"description": "Description of assistance or infrastructure that facilitate access to clients with disabilities.\r\n\r\nApplication Profile Notes: A suitable list of enumerated values needs to be agreed on. OR permitted values should be removed from the LGA Application Profile."
								}
							},
							"required": ["id"]
						}
					}
				},
				"required": ["id"]
			}
		}
	}
}
